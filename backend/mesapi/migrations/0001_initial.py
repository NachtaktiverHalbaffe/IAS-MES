# Generated by Django 3.2.3 on 2021-06-02 07:50

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buffer',
            fields=[
                ('resourceId', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('bufferIn', models.BooleanField(default=False)),
                ('bufferOut', models.BooleanField(default=False)),
                ('bufInONo', models.PositiveSmallIntegerField(default=0)),
                ('bufInOPos', models.PositiveSmallIntegerField(default=0)),
                ('bufOutONo', models.PositiveSmallIntegerField(default=0)),
                ('bufOutOPos', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Costumer',
            fields=[
                ('costumerNo', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=100)),
                ('adress', models.CharField(max_length=300, null=True)),
                ('phone', models.PositiveIntegerField(null=True)),
                ('eMail', models.EmailField(max_length=254, null=True)),
                ('company', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('level', models.CharField(choices=[('[WARNING]', 'Warning Level'), ('[ERROR]', 'Error Level'), ('[CRITICAL]', 'Critical Level')], default='[WARNING]', max_length=10)),
                ('msg', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('Connection issues', 'Issues related to network communication and connections'), ('Invalid input', 'Issues related to invalid inputs or invalid input Data'), ('Operational issue', 'Issues related to operating the system'), ('Integrity & Consistency issue', 'Issues related to integrity and consitency of data'), ('Unkown', 'Unkown Error')], default='Unkown', max_length=30)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('isSolved', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='StateVisualisationUnit',
            fields=[
                ('state', models.CharField(max_length=30)),
                ('lastUpdate', models.DateTimeField(auto_now_add=True)),
                ('ipAdress', models.GenericIPAddressField()),
                ('boundToRessource', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('baseLevelHeight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('assignedTask', models.CharField(default='None', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='StateWorkingPiece',
            fields=[
                ('lastUpdate', models.DateTimeField(auto_now_add=True)),
                ('location', models.PositiveSmallIntegerField(default=1)),
                ('partNo', models.PositiveIntegerField(default=25)),
                ('carrierId', models.PositiveSmallIntegerField(null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('storageLocation', models.PositiveSmallIntegerField(default=0)),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', max_length=18)),
                ('isAssembled', models.BooleanField()),
                ('isPackaged', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='WorkingStep',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(default='', max_length=200)),
                ('task', models.CharField(choices=[('assemble', 'Assemble the workingpiece'), ('package', 'Package the workingpiece'), ('unpackage', 'Unpackage the workingpiece'), ('color', 'Paint the workingpiece'), ('generic', 'Own implementation of a task'), ('store', 'Store a workingpiece'), ('unstore', 'Unstore a workingpiece')], default='assemble', max_length=15)),
                ('model', models.CharField(choices=[('IAS-Logo', 'Model of the IAS-logo')], default='IAS-Logo', max_length=100)),
                ('assignedToUnit', models.PositiveIntegerField()),
                ('color', colorfield.fields.ColorField(default='#000000', max_length=18)),
                ('stepNo', models.PositiveSmallIntegerField()),
                ('operationNo', models.PositiveSmallIntegerField(choices=[(510, 'Manual work'), (213, 'release a defined part on stopper 2'), (210, 'store a part from stopper 1')], default=510)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='WorkingPlan',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(default='', max_length=200)),
                ('workingPlanNo', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('workingSteps', models.ManyToManyField(to='mesapi.WorkingStep')),
            ],
        ),
        migrations.CreateModel(
            name='StatePLC',
            fields=[
                ('state', models.CharField(max_length=30)),
                ('lastUpdate', models.DateTimeField()),
                ('name', models.CharField(default='', max_length=30)),
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('mode', models.CharField(max_length=10)),
                ('mesMode', models.BooleanField()),
                ('ipAdress', models.GenericIPAddressField()),
                ('dockedAt', models.PositiveSmallIntegerField(null=True)),
                ('buffer', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mesapi.buffer')),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isInBridgingMode', models.BooleanField()),
                ('ipAdressMES4', models.GenericIPAddressField()),
                ('storage', models.CharField(max_length=100, null=True)),
                ('costumer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mesapi.costumer')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedOrder',
            fields=[
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(default='', max_length=200)),
                ('assignedAt', models.DateTimeField(auto_now_add=True)),
                ('orderNo', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('orderPos', models.PositiveSmallIntegerField(default=1)),
                ('mainOrderPos', models.PositiveSmallIntegerField(default=0)),
                ('status', models.CharField(max_length=30, null=True)),
                ('assigendWorkingPlan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mesapi.workingplan')),
                ('assignedWorkingPiece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mesapi.stateworkingpiece')),
                ('costumer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mesapi.costumer')),
            ],
        ),
    ]
